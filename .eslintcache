[{"C:\\Users\\acer\\Documents\\React Projects\\full-crud-react\\restaurant-menu-crud\\src\\App.js":"1","C:\\Users\\acer\\Documents\\React Projects\\full-crud-react\\restaurant-menu-crud\\src\\index.js":"2","C:\\Users\\acer\\Documents\\React Projects\\full-crud-react\\restaurant-menu-crud\\src\\reportWebVitals.js":"3","C:\\Users\\acer\\Documents\\React Projects\\full-crud-react\\restaurant-menu-crud\\src\\layouts\\NavBar.js":"4","C:\\Users\\acer\\Documents\\React Projects\\full-crud-react\\restaurant-menu-crud\\src\\authenticate\\Login.js":"5","C:\\Users\\acer\\Documents\\React Projects\\full-crud-react\\restaurant-menu-crud\\src\\helpers\\db.js":"6","C:\\Users\\acer\\Documents\\React Projects\\full-crud-react\\restaurant-menu-crud\\src\\authenticate\\Signup.js":"7","C:\\Users\\acer\\Documents\\React Projects\\full-crud-react\\restaurant-menu-crud\\src\\screen\\Menu.js":"8","C:\\Users\\acer\\Documents\\React Projects\\full-crud-react\\restaurant-menu-crud\\src\\data\\menuData.js":"9","C:\\Users\\acer\\Documents\\React Projects\\full-crud-react\\restaurant-menu-crud\\src\\screen\\MenuDialog.js":"10","C:\\Users\\acer\\Documents\\React Projects\\full-crud-react\\restaurant-menu-crud\\src\\model\\menu.js":"11"},{"size":973,"mtime":1653066631263,"results":"12","hashOfConfig":"13"},{"size":500,"mtime":1653061324275,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1652657656190,"results":"15","hashOfConfig":"13"},{"size":2642,"mtime":1653075540285,"results":"16","hashOfConfig":"13"},{"size":6412,"mtime":1653071402822,"results":"17","hashOfConfig":"13"},{"size":561,"mtime":1653073953987,"results":"18","hashOfConfig":"13"},{"size":6649,"mtime":1653064546122,"results":"19","hashOfConfig":"13"},{"size":10120,"mtime":1653081089615,"results":"20","hashOfConfig":"13"},{"size":1577,"mtime":1653080450269,"results":"21","hashOfConfig":"13"},{"size":5653,"mtime":1653079892437,"results":"22","hashOfConfig":"13"},{"size":355,"mtime":1653075372193,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"efcla4",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\acer\\Documents\\React Projects\\full-crud-react\\restaurant-menu-crud\\src\\App.js",[],"C:\\Users\\acer\\Documents\\React Projects\\full-crud-react\\restaurant-menu-crud\\src\\index.js",[],["49","50"],"C:\\Users\\acer\\Documents\\React Projects\\full-crud-react\\restaurant-menu-crud\\src\\reportWebVitals.js",[],"C:\\Users\\acer\\Documents\\React Projects\\full-crud-react\\restaurant-menu-crud\\src\\layouts\\NavBar.js",["51"],"C:\\Users\\acer\\Documents\\React Projects\\full-crud-react\\restaurant-menu-crud\\src\\authenticate\\Login.js",[],["52","53"],"C:\\Users\\acer\\Documents\\React Projects\\full-crud-react\\restaurant-menu-crud\\src\\helpers\\db.js",[],"C:\\Users\\acer\\Documents\\React Projects\\full-crud-react\\restaurant-menu-crud\\src\\authenticate\\Signup.js",["54"],"import React, {useEffect, useState} from 'react';\r\nimport {Container, CssBaseline, Avatar, Typography, \r\n    Button, Grid, Link, makeStyles, Card, CardContent} from '@material-ui/core';\r\nimport {LockRounded} from '@material-ui/icons';\r\nimport {ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\r\nimport fire from '../helpers/db';\r\nimport {ToastContainer, toast} from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\n\r\n\r\nconst SignUp = (props) => {\r\n    const classes = useStyles();\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    \r\n    const handleEmail = (event) => {\r\n        setEmail(event.target.value);\r\n    }\r\n    const handlePassword = (event) => {\r\n        setPassword(event.target.value);\r\n    }\r\n    const handleConfirmPassowerd = (event) => {\r\n        setConfirmPassword(event.target.value);\r\n    }\r\n    const handleSignUp = () => {\r\n        fire.auth()\r\n            .createUserWithEmailAndPassword(email, password)\r\n            .then(response => {\r\n                if(response) {\r\n                    props.toggle();\r\n                    toast.success('User Registered Successfully');\r\n                }\r\n            }).catch((error) => {\r\n                switch (error.code) {\r\n                    case 'auth/email-already-in-use':\r\n                        toast.error(error.message);\r\n                        break;\r\n                    case 'auth/invalid-email': \r\n                        toast.error(error.message);                    \r\n                        break;\r\n                    case 'auth/weak-password':\r\n                        toast.error(error.message);\r\n                        break;\r\n                }\r\n            });\r\n    }\r\n\r\n    useEffect(() => {\r\n        ValidatorForm.addValidationRule('isPasswordMatch', (value) => {\r\n            if(value !== password) {\r\n                return false;\r\n            }\r\n            return true;\r\n        });\r\n        return () => {\r\n            ValidatorForm.removeValidationRule('isPasswordMatch');\r\n        }\r\n    }, [password])\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <Card className={classes.card}>\r\n                <CardContent>\r\n                    <ToastContainer/>\r\n                    <CssBaseline/>\r\n                    <div className={classes.paper}>\r\n                        <Avatar className={classes.avatar}>\r\n                            <LockRounded/>\r\n                        </Avatar>\r\n                        <Typography component=\"h1\" variant=\"h5\">\r\n                            Sign Up\r\n                        </Typography>\r\n                        <ValidatorForm \r\n                         onSubmit={handleSignUp}\r\n                         className={classes.form}>\r\n                        <TextValidator\r\n                                variant=\"outlined\"\r\n                                margin=\"normal\"\r\n                                fullWidth\r\n                                label=\"Email\"\r\n                                onChange={handleEmail}\r\n                                name=\"email\"\r\n                                value={email}\r\n                                validators={['required', 'isEmail']}\r\n                                errorMessages={['this field is required', 'email is not valid']}\r\n                                autoComplete='off'\r\n                            />\r\n                            <br/>\r\n                            <TextValidator\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                label=\"Password\"\r\n                                onChange={handlePassword}\r\n                                name=\"password\"\r\n                                type=\"password\"\r\n                                value={password}\r\n                                validators={['required']}\r\n                                errorMessages={['this field is required']}\r\n                                autoComplete=\"off\"\r\n                            />\r\n                            <br/>\r\n                            <TextValidator\r\n                                variant=\"outlined\"\r\n                                label=\"Confirm password\"\r\n                                fullWidth\r\n                                onChange={handleConfirmPassowerd}\r\n                                name=\"confirmPassword\"\r\n                                type=\"password\"\r\n                                validators={['isPasswordMatch', 'required']}\r\n                                errorMessages={['password mismatch', 'this field is required']}\r\n                                value={confirmPassword}\r\n                                autoComplete=\"off\"\r\n                            />\r\n                             <Button\r\n                                type=\"submit\"\r\n                                fullWidth\r\n                                variant=\"contained\"\r\n                                className={classes.submit}\r\n                            >\r\n                                Sign Up\r\n                            </Button>\r\n                            <Grid container>\r\n                                <Grid item>\r\n                                <Link onClick={props.toggle} className={classes.pointer} variant=\"body2\">\r\n                                    {\"Already have an account? Sign In\"}\r\n                                </Link>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </ValidatorForm>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        </Container>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n      },\r\n      avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.primary.main,\r\n      },\r\n      form: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(1),\r\n      },\r\n      submit: {\r\n          background: 'linear-gradient(90deg, rgba(2,0,36,1) 0%, rgba(9,9,121,1) 0%, rgba(7,59,154,1) 46%, rgba(0,212,255,1) 100%)',\r\n          margin: theme.spacing(3, 0, 2),\r\n          color: '#fff'\r\n      },\r\n      card: {\r\n          marginTop: '60px',\r\n          paddingLeft: '20px',\r\n          paddingRight: '20px',\r\n          paddingBottom: '20px',\r\n      },\r\n      pointer: {\r\n          cursor: 'pointer',\r\n          color: 'red'\r\n      }\r\n}))\r\nexport default SignUp;","C:\\Users\\acer\\Documents\\React Projects\\full-crud-react\\restaurant-menu-crud\\src\\screen\\Menu.js",[],"C:\\Users\\acer\\Documents\\React Projects\\full-crud-react\\restaurant-menu-crud\\src\\data\\menuData.js",[],"C:\\Users\\acer\\Documents\\React Projects\\full-crud-react\\restaurant-menu-crud\\src\\screen\\MenuDialog.js",[],"C:\\Users\\acer\\Documents\\React Projects\\full-crud-react\\restaurant-menu-crud\\src\\model\\menu.js",[],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":8,"column":18,"nodeType":"61","messageId":"62","endLine":8,"endColumn":25},{"ruleId":"55","replacedBy":"63"},{"ruleId":"57","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":35,"column":17,"nodeType":"67","messageId":"68","endLine":45,"endColumn":18},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"no-unused-vars","'setAuth' is assigned a value but never used.","Identifier","unusedVar",["69"],["70"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-global-assign","no-unsafe-negation"]